package Lesson_1;

import java.util.Arrays;
import java.util.List;

public class HW1 {
    public static void main(String[] args) {

        Object[] obj = {1,2,3,4,5,6,7,8,9};


        changeEl(obj, 2,6); // Задание 1. подаем массив, указываем позиции элементов которые хотим поменять местами

        List<Object> listOfObject; //Задание 2. Создаем ArrayList

        listOfObject = Arrays.asList(obj);
        System.out.println("Задание 2. ArrayList из массива через метод Arrays.asList()");
        for (Object str : listOfObject)
            System.out.print(" " + str);
    }

    public static void changeEl (Object[] obj, int x, int y) {

        System.out.println("Задание 1. Первоначальный массив: " + Arrays.toString(obj));
        Object temp = obj[x];
        obj[x] = obj[y];
        obj[y] = temp;
        System.out.println("Получившийся массив: " + Arrays.toString(obj));
    }




}
//        1. Написать метод, который меняет два элемента массива местами.(массив может быть любого ссылочного типа);
//        2. Написать метод, который преобразует массив в ArrayList;
//        3. Большая задача:
//        a. Есть классы Fruit -> Apple, Orange;(больше фруктов не надо)
//        b. Класс Box в который можно складывать фрукты, коробки условно сортируются по типу фрукта, поэтому в одну коробку нельзя сложить и яблоки, и апельсины;
//        c. Для хранения фруктов внутри коробки можете использовать ArrayList;
//        d. Сделать метод getWeight() который высчитывает вес коробки, зная количество фруктов и вес одного фрукта(вес яблока - 1.0f, апельсина - 1.5f, не важно в каких это единицах);
//        e. Внутри класса коробка сделать метод compare, который позволяет сравнить текущую коробку с той, которую подадут в compare в качестве параметра, true - если их веса равны, false в противном случае(коробки с яблоками мы можем сравнивать с коробками с апельсинами);
//        f. Написать метод, который позволяет пересыпать фрукты из текущей коробки в другую коробку(помним про сортировку фруктов, нельзя яблоки высыпать в коробку с апельсинами), соответственно в текущей коробке фруктов не остается, а в другую перекидываются объекты, которые были в этой коробке;
//        g. Не забываем про метод добавления фрукта в коробку.

